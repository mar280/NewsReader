<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="link_detail.Location" type="System.Drawing.Point, System.Drawing">
    <value>12, 87</value>
  </data>
  <data name="lbt_newsData.Font" type="System.Drawing.Font, System.Drawing">
    <value>Tahoma, 8pt</value>
  </data>
  <data name="lbt_newsData.Location" type="System.Drawing.Point, System.Drawing">
    <value>18, 9</value>
  </data>
  <data name="lbt_newsData.Size" type="System.Drawing.Size, System.Drawing">
    <value>174, 31</value>
  </data>
  <data name="lbt_newsData.TextAlign" type="System.Drawing.ContentAlignment, System.Drawing">
    <value>MiddleLeft</value>
  </data>
  <data name="lbt_newsDate.Location" type="System.Drawing.Point, System.Drawing">
    <value>45, 61</value>
  </data>
  <data name="lbt_newsDate.TextAlign" type="System.Drawing.ContentAlignment, System.Drawing">
    <value>MiddleRight</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>196, 110</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        //8AAP//AAD//wAA//8AAP//gAH//8AD//8=
</value>
  </data>
</root>